#if !canImport(ObjectiveC)
import XCTest

extension CoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CoreTests = [
        ("testFullRun", testFullRun),
        ("testFullRunWithEmptyOutput", testFullRunWithEmptyOutput),
        ("testSwiftCArgs", testSwiftCArgs),
    ]
}

extension FileUtilsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileUtilsTests = [
        ("testBuildLogs", testBuildLogs),
        ("testInfofileFinder", testInfofileFinder),
        ("testLastOutput", testLastOutput),
        ("testSaveOutput", testSaveOutput),
        ("testTestLogs", testTestLogs),
    ]
}

extension ProjectInfoDataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProjectInfoDataTests = [
        ("testVersionComesFromPlist", testVersionComesFromPlist),
        ("testVersionWasManuallyProvided", testVersionWasManuallyProvided),
    ]
}

extension ProviderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProviderTests = [
        ("testArchiveTime", testArchiveTime),
        ("testIPASize", testIPASize),
        ("testLongestTest", testLongestTest),
        ("testObjcCount", testObjcCount),
        ("testTargetCount", testTargetCount),
        ("testTestCountBuck", testTestCountBuck),
        ("testTestCountXcode", testTestCountXcode),
        ("testTotalTestDuration", testTotalTestDuration),
        ("testWarningCount", testWarningCount),
    ]
}

extension SlackFormatterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SlackFormatterTests = [
        ("testFormatter", testFormatter),
        ("testFormatterWithError", testFormatterWithError),
        ("testRawPrint", testRawPrint),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CoreTests.__allTests__CoreTests),
        testCase(FileUtilsTests.__allTests__FileUtilsTests),
        testCase(ProjectInfoDataTests.__allTests__ProjectInfoDataTests),
        testCase(ProviderTests.__allTests__ProviderTests),
        testCase(SlackFormatterTests.__allTests__SlackFormatterTests),
    ]
}
#endif
